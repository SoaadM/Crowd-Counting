{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"ClSEMPMIf8no"},"outputs":[],"source":["!git clone https://github.com/ultralytics/yolov5\n","!pip install -qr yolov5/requirements.txt\n","%cd yolov5\n","\n","\n","import torch\n","from IPython.display import Image, clear_output\n","!from utils.google_utils import gdrive_download\n","\n","clear_output()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"S5Zh9_gIgJSz"},"outputs":[],"source":["%cd /content\n","!curl -L \"https://public.roboflow.com/ds/GUUKsfqGTC?key=Rn97y80iWZ\" > roboflow.zip; unzip roboflow.zip; rm roboflow.zip"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"URDNsBGqga-L"},"outputs":[],"source":["!mkdir train/\n","!mkdir train/images\n","!mkdir train/labels\n","!mkdir valid/\n","!mkdir valid/images\n","!mkdir valid/labels\n","!mkdir test/\n","!mkdir test/images\n","!mkdir test/labels"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l1zyF1ZbiEpC","outputId":"cf715bbf-28a3-4636-ea9a-2ed804b8d3ac","executionInfo":{"status":"ok","timestamp":1642590624651,"user_tz":-180,"elapsed":601,"user":{"displayName":"Maria Felemban","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04074400086694427639"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["30000\n","1919.0 479 600\n","1919 479 602\n"]}],"source":["import os\n","import shutil\n","\n","# allImages = glob.glob(\"/export/images/*.jpg\")\n","allImages = []\n","for filename in os.listdir(\"export/images/\"):\n","    if filename.endswith(\".jpg\"):\n","      allImages.append(filename)\n","trainImages = []\n","valImages = []\n","trainLabels = []\n","valLabels = []\n","testImages = []\n","testLabels = []\n","print(len(allImages))\n","testCount = int(0.2 * len(allImages)/10)\n","trainCount = len(allImages)/10 - testCount-1\n","valCount = int(0.2 * trainCount)\n","trainCount = trainCount - valCount-1\n","\n","print(trainCount, valCount, testCount)\n","\n","# create training Dataset\n","j = 0\n","k = 0\n","for i in range(0,int(len(allImages)/10)):\n","  if i < trainCount: # create training images\n","    trainImages.append(allImages[i])\n","  elif i >= trainCount and i<(valCount + trainCount):\n","    valImages.append(allImages[i])\n","    # j += 1\n","  else:\n","    testImages.append(allImages[i])\n","    # k += 1\n","\n","print(len(trainImages), len(valImages), len(testImages))\n","\n","# moving training images\n","source = \"export/images/\"\n","destination = \"train/images/\"\n","for fileT in trainImages:\n","  shutil.move(source+fileT , destination+fileT)\n","\n","source = \"export/images/\"\n","destination = \"valid/images/\"\n","for fileT in valImages:\n","  shutil.move(source+fileT , destination+fileT)\n","\n","source = \"export/images/\"\n","destination = \"test/images/\"\n","for fileT in testImages:\n","  shutil.move(source+fileT , destination+fileT)\n","\n","# moving labels\n","source = \"export/labels/\"\n","destination = \"train/labels/\"\n","for fileT in trainImages:\n","  fileT = fileT.replace(\".jpg\",\".txt\")\n","  shutil.move(source+fileT , destination+fileT)\n","\n","source = \"export/labels/\"\n","destination = \"valid/labels/\"\n","for fileT in valImages:\n","  fileT = fileT.replace(\".jpg\",\".txt\")\n","  shutil.move(source+fileT , destination+fileT)\n","\n","source = \"export/labels/\"\n","destination = \"test/labels/\"\n","for fileT in testImages:\n","  fileT = fileT.replace(\".jpg\",\".txt\")\n","  shutil.move(source+fileT , destination+fileT)\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Ai1lmZdeiSAe","outputId":"18e55ba2-eafb-4728-a24c-39316b02d079","executionInfo":{"status":"ok","timestamp":1642590624652,"user_tz":-180,"elapsed":3,"user":{"displayName":"Maria Felemban","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04074400086694427639"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["train: ../train/images\n","val: ../valid/images\n","\n","nc: 11\n","names: ['biker', 'car', 'pedestrian', 'trafficLight', 'trafficLight-Green', 'trafficLight-GreenLeft', 'trafficLight-Red', 'trafficLight-RedLeft', 'trafficLight-Yellow', 'trafficLight-YellowLeft', 'truck']"]}],"source":["#extracting information from the roboflow file\n","%cat data.yaml"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"IX2dR1hJiXhI"},"outputs":[],"source":["# define number of classes based on data.yaml\n","import yaml\n","with open(\"data.yaml\", 'r') as stream:\n","    num_classes = str(yaml.safe_load(stream)['nc'])"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-c0LbnDkibhe","outputId":"216cfa78-b774-431d-af19-72b16df27357","executionInfo":{"status":"ok","timestamp":1642590624989,"user_tz":-180,"elapsed":339,"user":{"displayName":"Maria Felemban","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04074400086694427639"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["# YOLOv5 ðŸš€ by Ultralytics, GPL-3.0 license\n","\n","# Parameters\n","nc: 80  # number of classes\n","depth_multiple: 0.33  # model depth multiple\n","width_multiple: 0.50  # layer channel multiple\n","anchors:\n","  - [10,13, 16,30, 33,23]  # P3/8\n","  - [30,61, 62,45, 59,119]  # P4/16\n","  - [116,90, 156,198, 373,326]  # P5/32\n","\n","# YOLOv5 v6.0 backbone\n","backbone:\n","  # [from, number, module, args]\n","  [[-1, 1, Conv, [64, 6, 2, 2]],  # 0-P1/2\n","   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4\n","   [-1, 3, C3, [128]],\n","   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8\n","   [-1, 6, C3, [256]],\n","   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16\n","   [-1, 9, C3, [512]],\n","   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32\n","   [-1, 3, C3, [1024]],\n","   [-1, 1, SPPF, [1024, 5]],  # 9\n","  ]\n","\n","# YOLOv5 v6.0 head\n","head:\n","  [[-1, 1, Conv, [512, 1, 1]],\n","   [-1, 1, nn.Upsample, [None, 2, 'nearest']],\n","   [[-1, 6], 1, Concat, [1]],  # cat backbone P4\n","   [-1, 3, C3, [512, False]],  # 13\n","\n","   [-1, 1, Conv, [256, 1, 1]],\n","   [-1, 1, nn.Upsample, [None, 2, 'nearest']],\n","   [[-1, 4], 1, Concat, [1]],  # cat backbone P3\n","   [-1, 3, C3, [256, False]],  # 17 (P3/8-small)\n","\n","   [-1, 1, Conv, [256, 3, 2]],\n","   [[-1, 14], 1, Concat, [1]],  # cat head P4\n","   [-1, 3, C3, [512, False]],  # 20 (P4/16-medium)\n","\n","   [-1, 1, Conv, [512, 3, 2]],\n","   [[-1, 10], 1, Concat, [1]],  # cat head P5\n","   [-1, 3, C3, [1024, False]],  # 23 (P5/32-large)\n","\n","   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)\n","  ]\n"]}],"source":["%cat /content/yolov5/models/yolov5s.yaml"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"cERZ9GMxijaO"},"outputs":[],"source":["#customize iPython writefile so we can write variables\n","from IPython.core.magic import register_line_cell_magic\n","\n","@register_line_cell_magic\n","def writetemplate(line, cell):\n","    with open(line, 'w') as f:\n","        f.write(cell.format(**globals()))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ZJuSxDvLiq1Y"},"outputs":[],"source":["%%writetemplate /content/yolov5/models/custom_yolov5s.yaml\n","\n","# parameters\n","nc: {num_classes}  # number of classes\n","depth_multiple: 0.33  # model depth multiple\n","width_multiple: 0.50  # layer channel multiple\n","\n","# anchors\n","anchors:\n","  - [10,13, 16,30, 33,23]  # P3/8\n","  - [30,61, 62,45, 59,119]  # P4/16\n","  - [116,90, 156,198, 373,326]  # P5/32\n","\n","# YOLOv5 backbone\n","backbone:\n","  # [from, number, module, args]\n","  [[-1, 1, Focus, [64, 3]],  # 0-P1/2\n","   [-1, 1, Conv, [128, 3, 2]],  # 1-P2/4\n","   [-1, 3, BottleneckCSP, [128]],\n","   [-1, 1, Conv, [256, 3, 2]],  # 3-P3/8\n","   [-1, 9, BottleneckCSP, [256]],\n","   [-1, 1, Conv, [512, 3, 2]],  # 5-P4/16\n","   [-1, 9, BottleneckCSP, [512]],\n","   [-1, 1, Conv, [1024, 3, 2]],  # 7-P5/32\n","   [-1, 1, SPP, [1024, [5, 9, 13]]],\n","   [-1, 3, BottleneckCSP, [1024, False]],  # 9\n","  ]\n","\n","# YOLOv5 head\n","head:\n","  [[-1, 1, Conv, [512, 1, 1]],\n","   [-1, 1, nn.Upsample, [None, 2, 'nearest']],\n","   [[-1, 6], 1, Concat, [1]],  # cat backbone P4\n","   [-1, 3, BottleneckCSP, [512, False]],  # 13\n","\n","   [-1, 1, Conv, [256, 1, 1]],\n","   [-1, 1, nn.Upsample, [None, 2, 'nearest']],\n","   [[-1, 4], 1, Concat, [1]],  # cat backbone P3\n","   [-1, 3, BottleneckCSP, [256, False]],  # 17 (P3/8-small)\n","\n","   [-1, 1, Conv, [256, 3, 2]],\n","   [[-1, 14], 1, Concat, [1]],  # cat head P4\n","   [-1, 3, BottleneckCSP, [512, False]],  # 20 (P4/16-medium)\n","\n","   [-1, 1, Conv, [512, 3, 2]],\n","   [[-1, 10], 1, Concat, [1]],  # cat head P5\n","   [-1, 3, BottleneckCSP, [1024, False]],  # 23 (P5/32-large)\n","\n","   [[17, 20, 23], 1, Detect, [nc, anchors]],  # Detect(P3, P4, P5)\n","  ]"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"xzO_k1BWiu5-"},"outputs":[],"source":["# train yolov5s on custom data for 100 epochs\n","# time its performance\n","%%time\n","%cd /content/yolov5/\n","!python train.py --img 416 --batch 16 --epochs 100 --data '../data.yaml' --cfg ./models/custom_yolov5s.yaml --weights '' --name yolov5s_results  --cache"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HcNO4_GYiyZD"},"outputs":[],"source":["!python detect.py --weights runs/train/yolov5s_results/weights/best.pt --img 416 --conf 0.4 --source ../test/images"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bUFcovvbA8ag","colab":{"base_uri":"https://localhost:8080/","output_embedded_package_id":"1-n6OwkeSD-bSuJGOp6iRiE4kUWpEkPSj"},"executionInfo":{"status":"ok","timestamp":1642595124486,"user_tz":-180,"elapsed":0,"user":{"displayName":"Maria Felemban","photoUrl":"https://lh3.googleusercontent.com/a/default-user=s64","userId":"04074400086694427639"}},"outputId":"1c3c6853-d909-4c43-e031-4cb9b0aecec1"},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["import glob\n","from IPython.display import Image, display\n","\n","for imageName in glob.glob('/content/yolov5/runs/detect/exp/*.jpg'):\n","    display(Image(filename=imageName))\n","    print(\"\\n\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"zD_Hi_gMDLnC"},"outputs":[],"source":[""]}],"metadata":{"accelerator":"GPU","colab":{"name":"old_self_car_drive.ipynb","provenance":[],"collapsed_sections":[]},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}
